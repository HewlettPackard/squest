- name: Add helm repo for RabbitMQ operator
  kubernetes.core.helm_repository:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    name: bitnami
    repo_url: "https://charts.bitnami.com/bitnami"

- name: Install RabbitMQ operator
  kubernetes.core.helm:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    name: rabbitmq-cluster-operator
    release_namespace: "{{ squest_namespace }}"
    chart_version: "{{ rabbitmq_operator_chart_version }}"
    chart_ref: bitnami/rabbitmq-cluster-operator

- name: Wait until CSV installed
  kubernetes.core.k8s_info:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    api_version: "apiextensions.k8s.io/v1"
    kind: CustomResourceDefinition
    name: "rabbitmqclusters.rabbitmq.com"
    namespace: "{{ squest_namespace }}"
    wait: yes
    wait_sleep: 10
    wait_timeout: 600
    wait_condition:
      type: Established
      status: "True"

- name: Download RabbitMQ messaging-topology-operator manifest
  ansible.builtin.get_url:
    url: "{{ rabbitmq_topology_operator_manifest_url }}"
    dest: "/tmp/rabbitmq_topology_operator_manifest.yaml"
    mode: '0664'

- name: Deploy RabbitMQ messaging-topology-operator
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    src: "/tmp/rabbitmq_topology_operator_manifest.yaml"

- name: Wait until CSV installed
  loop:
    - users.rabbitmq.com
    - vhosts.rabbitmq.com
    - rabbitmqclusters.rabbitmq.com
  kubernetes.core.k8s_info:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    api_version: "apiextensions.k8s.io/v1"
    kind: CustomResourceDefinition
    name: "{{ item }}"
    namespace: "{{ squest_namespace }}"
    wait: yes
    wait_sleep: 10
    wait_timeout: 600
    wait_condition:
      type: Established
      status: "True"

- name: RabbitMQ user password secret
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    namespace: "{{ squest_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: rabbitmq-user-secret
        labels:
          app: squest
          service: rabbitmq
      type: Opaque
      stringData:
        username: "{{ squest_rabbitmq.user }}"
        password: "{{ squest_rabbitmq.password }}"

- name: RabbitMQ user
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    namespace: "{{ squest_namespace }}"
    definition:
      apiVersion: rabbitmq.com/v1beta1
      kind: User
      metadata:
        name: rabbitmq-user
        labels:
          app: squest
          service: rabbitmq
      spec:
        tags:
          - administrator
        rabbitmqClusterReference:
          name: rabbitmq
        importCredentialsSecret:
          name: rabbitmq-user-secret

- name: Deploy RabbitMQ cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    namespace: "{{ squest_namespace }}"
    definition:
      apiVersion: rabbitmq.com/v1beta1
      kind: RabbitmqCluster
      metadata:
        labels:
          app: squest
          service: rabbitmq
        name: rabbitmq
      spec:
        replicas: 3
        image: rabbitmq:3.10.23-management
        service:
          type: ClusterIP
        persistence:
          storageClassName: "{{ k8s_storage_class }}"
          storage: 10Gi
        resources:
          requests:
            cpu: 256m
            memory: 1Gi
          limits:
            cpu: 256m
            memory: 1Gi
        rabbitmq:
          additionalPlugins:
            - rabbitmq_management
            - rabbitmq_peer_discovery_k8s
          additionalConfig: |
            cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
            cluster_formation.k8s.host = kubernetes.default
            cluster_formation.k8s.address_type = hostname
            vm_memory_high_watermark_paging_ratio = 0.85
            cluster_formation.node_cleanup.interval = 10
            cluster_partition_handling = autoheal
            queue_master_locator = min-masters
            loopback_users.guest = false
          advancedConfig: ""

- name: RabbitMQ Squest vhost
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    namespace: "{{ squest_namespace }}"
    definition:
      apiVersion: rabbitmq.com/v1beta1
      kind: Vhost
      metadata:
        name: squest-vhost
        labels:
          app: squest
          service: rabbitmq
      spec:
        name: squest # vhost name
        defaultQueueType: quorum # default queue type for this vhost; require RabbitMQ version 3.11.12 or above
        rabbitmqClusterReference:
          name: rabbitmq # rabbitmqCluster must exist in the same namespace as this resource

- name: Squest vHost permissions
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    namespace: "{{ squest_namespace }}"
    definition:
      apiVersion: rabbitmq.com/v1beta1
      kind: Permission
      metadata:
        name: squest-vhost-permission
      spec:
        vhost: squest
        userReference:
          name: rabbitmq-user
        permissions:
          write: ".*"
          configure: ".*"
          read: ".*"
        rabbitmqClusterReference:
          name: rabbitmq
