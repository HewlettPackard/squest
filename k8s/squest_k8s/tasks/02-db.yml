- name: Deploy Maria DB operator manifest
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    namespace: "default"  # mandatory as they have hardcoded hooks in default NS
    definition: "{{ lookup('file', 'mariadb-operator.v0.22.0.yml') | from_yaml_all }}"

- name: Wait until CSV installed
  kubernetes.core.k8s_info:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    api_version: "apiextensions.k8s.io/v1"
    kind: CustomResourceDefinition
    name: "mariadbs.mariadb.mmontes.io"
    namespace: "{{ squest_namespace }}"
    wait: yes
    wait_sleep: 10
    wait_timeout: 600
    wait_condition:
      type: Established
      status: "True"

- name: Create a secrets for mariadb
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    namespace: "{{ squest_namespace }}"
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: "mariadb"
        labels:
          app: squest
          service: mariadb
      data:
        root-password: "{{ squest_db.root_password |b64encode }}"
        password: "{{ squest_db.password |b64encode }}"

- name: Deploy Maria DB
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    namespace: "{{ squest_namespace }}"
    definition:
      apiVersion: mariadb.mmontes.io/v1alpha1
      kind: MariaDB
      metadata:
        name: mariadb
        labels:
          app: squest
          service: mariadb
      spec:
        rootPasswordSecretKeyRef:
          name: mariadb
          key: root-password
        database: "{{ squest_db.database }}"
        username: "{{ squest_db.user }}"
        passwordSecretKeyRef:
          name: mariadb
          key: password
        image: mariadb:11.0.3
        imagePullPolicy: IfNotPresent
        port: 3306
        volumeClaimTemplate:
          resources:
            requests:
              storage: 1Gi
          accessModes:
            - ReadWriteOnce
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 512Mi
        livenessProbe:
          exec:
            command:
              - bash
              - -c
              - mariadb -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SELECT 1;"
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - mariadb -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SELECT 1;"
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5

- name: Wait until MariaDB deployment available
  kubernetes.core.k8s_info:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    api_version: "mariadb.mmontes.io/v1alpha1"
    kind: "MariaDB"
    name: "mariadb"
    namespace: "{{ squest_namespace }}"
    wait: yes
    wait_sleep: 10
    wait_timeout: 600
    wait_condition:
      type: Ready
      status: "True"


- when: squest_phpmyadmin.enabled
  block:
    - name: Deploy PHPMyAdmin configmap environment
      kubernetes.core.k8s:
        kubeconfig: "{{ k8s_kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            namespace: "{{ squest_namespace }}"
            labels:
              app: squest
              service: phpmyadmin
            name: phpmyadmin-env
          data: "{{ squest_phpmyadmin.env }}"

    - name: PHPMyAdmin deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ k8s_kubeconfig_path }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            namespace: "{{ squest_namespace }}"
            labels:
              app: squest
              service: phpmyadmin
            name: phpmyadmin
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/name: squest-phpmyadmin
            strategy:
              type: Recreate
            template:
              metadata:
                labels:
                  app: squest
                  app.kubernetes.io/name: squest-phpmyadmin
              spec:
                containers:
                  - name: phymyadmin
                    image: phpmyadmin/phpmyadmin:5.1.3
                    envFrom:
                      - configMapRef:
                          name: phpmyadmin-env
                    ports:
                      - containerPort: 80

    - name: PHPMyAdmin service
      kubernetes.core.k8s:
        kubeconfig: "{{ k8s_kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            namespace: "{{ squest_namespace }}"
            labels:
              app: squest
              service: phpmyadmin
            name: phpmyadmin-service
          spec:
            ports:
              - name: "http"
                port: 80
                targetPort: 80
            selector:
              app.kubernetes.io/name: squest-phpmyadmin

    - when: squest_phpmyadmin is defined and squest_phpmyadmin.ingress is defined and squest_phpmyadmin.ingress.enabled
      name: PHPMyAdmin ingress
      kubernetes.core.k8s:
        kubeconfig: "{{ k8s_kubeconfig_path }}"
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            labels:
              app: squest
              service: phpmyadmin
            namespace: "{{ squest_namespace }}"
            name: phpmyadmin-ingress
            annotations: "{{ squest_phpmyadmin.ingress.annotation }}"
          spec:
            rules:
              - host: "{{ squest_phpmyadmin.ingress.host }}"
                http:
                  paths:
                    - pathType: Prefix
                      path: "/"
                      backend:
                        service:
                          name: phpmyadmin-service
                          port:
                            number: 80
