# Generated by Django 4.2.5 on 2023-11-08 08:35

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("profiles", "0022_alter_permission_options"),
        ("service_catalog", "0029_alter_instance_requester"),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                ("name", models.CharField(max_length=100)),
                ("email_title", models.CharField(max_length=255)),
                ("html_content", models.TextField()),
                (
                    "instance_states",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Filter instance state. Nothing selected means all state impacted by the email",
                    ),
                ),
                (
                    "when",
                    models.CharField(
                        blank=True,
                        help_text="Ansible like 'when' with `instance` as context. No Jinja brackets needed",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "quota_scopes",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Filter on quota scope. Nothing selected means all quota scope impacted by the email",
                        related_name="email_templates",
                        related_query_name="email_template",
                        to="profiles.scope",
                    ),
                ),
                (
                    "services",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Filter on services. Nothing selected means all services impacted by the email",
                        related_name="email_templates",
                        related_query_name="email_template",
                        to="service_catalog.service",
                    ),
                ),
            ],
            options={
                "permissions": [("send_email_template", "Can send email template")],
                "default_permissions": ("add", "change", "delete", "view", "list"),
            },
        ),
    ]
